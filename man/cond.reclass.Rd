% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cond_reclass.R
\name{cond.reclass}
\alias{cond.reclass}
\title{Test conditions and reclassify}
\usage{
cond.reclass(
  attTbl,
  ngbList = NULL,
  rNumb = FALSE,
  classVector,
  conditions,
  class,
  reclass,
  fn_perc = 1
)
}
\arguments{
\item{attTbl}{data.frame, the attribute table returned by the function
\code{\link{attTbl}}.}

\item{ngbList}{list, the list of neighborhoods returned by the function
\code{\link{ngbList}}. Only necessary if using a \emph{neighborhood condition}
(see \code{\link{conditions}}).}

\item{rNumb}{logic, the neighborhoods of the argument \code{ngbList} are
identified by cell numbers (\code{rNumb=FALSE}) or by row numbers
(\code{rNumb=TRUE}) (see \code{\link{ngbList}}). It is advised to use row
numbers for large rasters.}

\item{classVector}{numeric vector, defines the cells in the attribute table
that have already been classified. See \code{\link{conditions}} for more
information about class vectors.}

\item{conditions}{character string, the conditions a cell have to meet to be
classified as indicated by the argument \code{reclass}. See
\code{\link{conditions}} for more details.}

\item{class}{numeric or numeric vector, indicates the class(es) for which
conditions have to be evaluated.}

\item{reclass}{numeric, the classification number to assign to all cells that
meet the function conditions.}

\item{fn_perc}{numeric value between 0 and 1. If a \emph{neighborhood condition}
is considered, test cells are classified if the conditions are true for at
least as many evaluations as the ones specified by the argument
\code{fn_perc} (see \code{\link{conditions}}).}
}
\value{
Update \code{classVector} with the new cells that were classified by
the function. See \code{\link{conditions}} for more information about class
vectors.
}
\description{
Evaluate conditions for cells of a class and reclassify them if conditions
are true.
}
\details{
\itemize{ \item The function evaluates the conditions of the
argument \code{conditions} for all cells in the classes of the
argument \code{class}.

\item Cells that meet the function conditions are classified as indicted by
the argument \code{reclass}.

\item Absolute test cell and neighborhood conditions can be used. The
condition string can only include one neighborhood condition (\code{'{}'})
(see \code{\link{conditions}}).}
}
\examples{
library(terra)
library(scapesClassification)

# LOAD THE DUMMY RASTER
r <- list.files(system.file("extdata", package = "scapesClassification"),
                pattern = "dummy_raster\\\\.tif", full.names = TRUE)
r <- terra::rast(r)

# COMPUTE THE ATTRIBUTE TABLE
at <- attTbl(r, "dummy_var")

# COMPUTE THE LIST OF NEIGBORHOODS
nbs <- ngbList(r)


################################################################################
# RECLASS.NBS
################################################################################

# Compute an example class vector
cv <- cond.4.all(attTbl = at, conditions = "dummy_var > 1", class = 1)

# Reclassify cells
cr <- cond.reclass(attTbl = at, ngbList = nbs,

                   # CLASS VECTOR COMPUTED WITH THE RULE "dummy_var > 1"
                   classVector = cv,

                   # CELLS TO RECLASSIFY HAVE THIS CLASS
                   class = 1,

                   # ABSOLUTE CONDITION
                   conditions = "dummy_var > 5",

                   # NEW CLASSIFICATION NUMBER
                   reclass = 2)

# Convert class vectors to rasters
r_cr <- cv.2.rast(r, at$Cell,classVector = cr, plot = FALSE)


################################################################################
# PLOTS
################################################################################
plot(r_cr, type="classes", axes=FALSE, legend = FALSE, asp=NA,
     colNA="#818792", col=c("#78b2c4", "#cfad89"))
text(r)
title("COND.RECLASS", adj = 0.0, line = 1,
 sub =
 "Rule: 'dummy_var > 1'; Function: cond.4.all; Class: 1
Rule: 'dummy_var > 5'; Function: cond.reclass; Class: 2")
legend("bottomright", ncol = 1, bg = "white", fill = c("#78b2c4", "#cfad89", "#818792"),
       legend = c("Class 1","Class 2 (reclass)","Unclassified cells"))
}
\seealso{
\code{\link[=conditions]{conditions()}}, \code{\link[=attTbl]{attTbl()}}, \code{\link[=ngbList]{ngbList()}}
}
